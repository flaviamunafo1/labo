aggregate(Grasas_sat,by=list(Sexo),median,na.rm=TRUE)
aggregate(Alcohol,by=list(Sexo),median,na.rm=TRUE)
aggregate(Calorías,by=list(Sexo),median,na.rm=TRUE)
aggregate(Grasas_sat,by=list(Sexo),sd,na.rm=TRUE)
aggregate(Alcohol,by=list(Sexo),sd,na.rm=TRUE)
aggregate(Calorías,by=list(Sexo),sd,na.rm=TRUE)
Datos_trabajo_1<- Datos_trabajo_1%>%
mutate(Categoria = ifelse(Calor?as <= 1700, "CATE1", "CATE3"))
Datos_trabajo_1<- Datos_trabajo_1%>%
mutate(Categoria = ifelse(Calorías <= 1700, "CATE1", "CATE3"))
ggplot(data=Datos_trabajo_1, mapping = aes(x=Categoria, fill=Alcohol))+
geom_bar( position = "dodge")+
labs(title="Observaciones del Consumo de Alcohol y Calorias ", x="Categoria", y="-
Alcohol")
data(swiss)
Data_swiss = data(swiss)
data(swiss)
head(swiss)
View(swiss)
sqrt(apply(Alcohol,2,var))
sqrt(apply(Alcohol,1,var))
cor(swiss[,1:6])
cor(swiss$Education, swiss$Examination)
library(ggplot2)
qplot(1:1000,rnorm(1000, 0, 10), geom="line")
+ labs(x="Tiempo", y="Presión", title="Onda de sonido“)+
theme_minimal()
library(psych)
corPlot (~ Education + Agriculture + Examination + Fertility,  data = swiss, cex = 1.2, main = "Matriz de correlación")
library(psych)
corPlot (Education + Agriculture + Examination + Fertility,  data = swiss, cex = 1.2, main = "Matriz de correlación")
library(psych)
corPlot (swiss, cex = 1.2, main = "Matriz de correlación")
library(psych)
install.packages("psych")
library(psych)
library(psych)
library(ggplot2)
corPlot(data, cex = 1.2, main = "Matriz de correlación")
corPlot(swiss, cex = 1.2, main = "Matriz de correlación")
library(stats) #para la distancia de mahalanobis
library(MASS) #para generar datos con distribuci?n normal multivariada
n = 5000
#n<-10
mu = c(0,0)
sigma = matrix(c(1,0.8,0.8,1),2)
datos = mvrnorm(n,mu,sigma)
dim(datos)
X11()
plot(datos, pch=".")
muest = colMeans(datos)
sigmaest = cov(datos)
distancias = mahalanobis(datos,muest,sigmaest)
distancias[1:6]
length(distancias)
points(datos[distancias>2,],pch="x",col="red")
hist(distancias, probability =T)
X11()
library(stats) #para la distancia de mahalanobis
library(MASS) #para generar datos con distribuci?n normal multivariada
n = 5000
#n<-10
mu = c(0,0) #media ceros
sigma = matrix(c(1,0.8,0.8,1),2) #dentro de la diagonal 1 fuera 8
datos = mvrnorm(n,mu,sigma) #genera vectores aleatorios
dim(datos)
X11()
plot(datos, pch=".")
muest = colMeans(datos)
sigmaest = cov(datos)
distancias = mahalanobis(datos,muest,sigmaest)
distancias[1:6]
length(distancias)
points(datos[distancias>2,],pch="x",col="red")
hist(distancias, probability =T)
distancias = mahalanobis(datos,muest,sigmaest)
distancias[1:6]
length(distancias)
points(datos[distancias>2,],pch="x",col="red")
n = 5000
#n<-10
mu = c(0,0) #media ceros
sigma = matrix(c(1,0.8,0.8,1),2) #dentro de la diagonal 1 fuera 8
datos = mvrnorm(n,mu,sigma) #genera vectores aleatorios
dim(datos)
X11()
plot(datos, pch=".")
library(stats) #para la distancia de mahalanobis
library(MASS) #para generar datos con distribuci?n normal multivariada
n = 47
#n<-10
mu = c(0,0)
sigma = matrix(c(1,0.8,0.8,1),2)
datos = mvrnorm(n,mu,sigma)
dim(datos)
X11()
plot(datos, pch=".")
muest = colMeans(datos)
sigmaest = cov(datos)
distancias = mahalanobis(datos,muest,sigmaest)
distancias[1:6]
length(distancias)
points(datos[distancias>2,],pch="x",col="red")
hist(distancias, probability =T)
library(ggplot2)
library(dplyr)
head(europe)
boxplot(europe[,2:8], col = "violet")
library(ggplot2)
library(dplyr)
head(europe)
europe <- read.csv("~/Desktop/Especialización en Ciencia de Datos/Fundamentos de anáisis de datos/TP2/TP entregar/europe.csv")
View(europe)
library(ggplot2)
library(dplyr)
head(europe)
boxplot(europe[,2:8], col = "violet")
autoplot(pca_Corr, data = europe, label = TRUE,
loadings = TRUE, loadings.colour = 'blue',
loadings.label = TRUE, loadings.label.size = 2)
ggplot(europe$Area) +
geom_point()+
geom_smooth(method=lm)
x <- europe$Area
y <- europe$GDP
plot(x, y, main = "Area vs GDP",
xlab = "Area", ylab = "GDP",
pch = 19, frame = FALSE)
abline(lm(y ~ x, data = europe), col = "blue")
library(psych)
library(ggplot2)
corPlot(europe[,2:8], cex = 1.2, main = "Matriz de correlación")
round(cov(europe[,2:8]),2) #matriz cov
windows(width=6, height=4, rescale="fit")
pairs(europe[,2:8])
round(cov(europe[,2:8]),2) #matriz cov
library(psych)
library(ggplot2)
corPlot(europe[,2:8], cex = 1.2, main = "Matriz de correlación")
round(cov(europe[,2:8]),2) #matriz cov
pca_Corr = prcomp(europe[,2:8], scale = TRUE)
summary(pca_Corr)
pca_Corr$rotation
pca_Corr$x
pca_Corr$sdv
pca_Corr$dvs
pca_Corr$sdev
variab<-pca_Cov$sdev^2/sum(pca_Cov$sdev^2)
plot(variab,type= "o", col = "blue",lwd=2 )
summary(pca_Cov)
autoplot(pca_Corr, data = europe, label = TRUE,
loadings = TRUE, loadings.colour = 'blue',
loadings.label = TRUE, loadings.label.size = 2)
library(psych)
library(ggplot2)
autoplot(pca_Corr, data = europe, label = TRUE,
loadings = TRUE, loadings.colour = 'blue',
loadings.label = TRUE, loadings.label.size = 2)
library(ggplot2)
library(dplyr)
library(psych)
library(ggplot2)
corPlot(europe[,2:8], cex = 1.2, main = "Matriz de correlación")
round(cov(europe[,2:8]),2) #matriz cov
windows(width=6, height=4, rescale="fit")
pairs(europe[,2:8])
pca_Corr = prcomp(europe[,2:8], scale = TRUE)
summary(pca_Corr)
pca_Corr$rotation
pca_Corr$x
pca_Corr$sdev
pca_Cov = prcomp(europe[,2:8])
summary(pca_Cov)
pca_Cov$rotation
pca_Cov$x
variab<-pca_Corr$sdev^2/sum(pca_Corr$sdev^2)
plot(variab,type= "o", col = "blue",lwd=2 )
summary(pca_Corr)
variab<-pca_Cov$sdev^2/sum(pca_Cov$sdev^2)
plot(variab,type= "o", col = "blue",lwd=2 )
summary(pca_Cov)
library(psych)
library(ggplot2)
autoplot(pca_Corr, data = europe, label = TRUE,
loadings = TRUE, loadings.colour = 'blue',
loadings.label = TRUE, loadings.label.size = 2)
library(ggplot2)
biplot(pca_Corr, data = europe, label = TRUE,
loadings = TRUE, loadings.colour = 'blue',
loadings.label = TRUE, loadings.label.size = 2)
pca_Corr = prcomp(europe[,2:8], scale = TRUE)
summary(pca_Corr)
pca_Corr$rotation
pca_Corr$x
pca_Corr$sdev
europe <- read.csv("~/Desktop/Especialización en Ciencia de Datos/Fundamentos de anáisis de datos/TP2/TP entregar/europe.csv")
View(europe)
hist(x = europe$Inflation, main = "Histograma de Inflation",
xlab = "Area", ylab = "Frecuencia",
col = "lightred")
library(ggplot2)
library(dplyr)
head(europe)
boxplot(europe[,2:8], col = "violet")
hist(x = europe$Inflation, main = "Histograma de Inflation",
xlab = "Area", ylab = "Frecuencia",
col = "lightred")
library(ggplot2)
library(dplyr)
head(europe)
boxplot(europe[,2:8], col = "violet")
hist(x = europe$Inflation, main = "Histograma de Inflation",
xlab = "Area", ylab = "Frecuencia",
col = "lightblue")
hist(x = europe$Inflation, main = "Histograma de Inflation",
xlab = "Area", ylab = "Frecuencia",
col = "lightviolet")
hist(x = europe$Inflation, main = "Histograma de Inflation",
xlab = "Area", ylab = "Frecuencia",
col = "lightpink")
hist(x = europe$Inflation, main = "Histograma de Inflation",
xlab = "Area", ylab = "Frecuencia",
col = "lightgreen")
hist(x = europe$Inflation, main = "Histograma de Inflation",
xlab = "Area", ylab = "Frecuencia",
col = "lightyellow")
hist(x = europe$Inflation, main = "Histograma de Inflation",
xlab = "Inflación", ylab = "Frecuencia",
col = "lightyellow")
hist(x = europe$Inflation, main = "Histograma de Inflation",
xlab = "Inflation", ylab = "Frecuencia",
col = "lightyellow")
hist(x = europe$Area, main = "Histograma de Area",
xlab = "Area", ylab = "Frecuencia",
col = "lightblue")
hist(x = europe$Life.expect, main = "Histograma de Esperanza de vida",
xlab = "Area", ylab = "Frecuencia",
col = "lightred")
hist(x = europe$Life.expect, main = "Histograma de Esperanza de vida",
xlab = "Area", ylab = "Frecuencia",
col = "lightviolet")
hist(x = europe$Life.expect, main = "Histograma de Esperanza de vida",
xlab = "Area", ylab = "Frecuencia",
col = "EEC591")
hist(x = europe$Life.expect, main = "Histograma de Esperanza de vida",
xlab = "Area", ylab = "Frecuencia",
col = "#EEC591")
hist(x = europe$Life.expect, main = "Histograma de Life expect",
xlab = "Life expect", ylab = "Frecuencia",
col = "#EEC591")
hist(x = europe$Military, main = "Histograma de Military",
xlab = "Military", ylab = "Frecuencia",
col = "#EE3B3B")
hist(x = europe$Military, main = "Histograma de Military",
xlab = "Military", ylab = "Frecuencia",
col = "#EEE0E5")
hist(x = europe$Unemployment, main = "Histograma de Unemployment",
xlab = "Unemployment", ylab = "Frecuencia",
col = "#B3EE3A")
hist(x = europe$Unemployment, main = "Histograma de Unemployment",
xlab = "Unemployment", ylab = "Frecuencia",
col = "#9FB6CD")
hist(x = europe$Unemployment, main = "Histograma de Unemployment",
xlab = "Unemployment", ylab = "Frecuencia",
col = "#B9D3EE")
hist(x = europe$Pop.growth, main = "Histograma de Pop growth",
xlab = "Pop growth", ylab = "Frecuencia",
col = "lightgreen")
summary(europe)
sd(europe$Area)
sd(europe$GDP)
sd(europe$Inflation)
sd(europe$Life.expect)
sd(europe$Military)
sd(europe$Pop.growth)
sd(europe$Unemployment)
x <- europe$Area
y <- europe$GDP
plot(x, y, main = "Area vs GDP",
xlab = "Area", ylab = "GDP",
pch = 19, frame = FALSE)
abline(lm(y ~ x, data = europe), col = "blue")
x <- europe$Area
y1 <- europe$Inflation
plot(x, y1, main = "Area vs Inflación",
xlab = "Area", ylab = "Inflación",
pch = 19, frame = FALSE)
abline(lm(y1 ~ x, data = europe), col = "blue")
x <- europe$Area
y1 <- europe$Inflation
plot(x, y1, main = "Area vs Inflación",
xlab = "Area", ylab = "Inflación",
pch = 19, frame = FALSE)
abline(lm(y1=x, data = europe), col = "blue")
x <- europe$Area
y1 <- europe$Inflation
plot(x, y1, main = "Area vs Inflación",
xlab = "Area", ylab = "Inflación",
pch = 19, frame = FALSE)
abline(lm(y1 ~ x, data = europe), col = "blue")
library(psych)
library(ggplot2)
corPlot(europe[,2:8], cex = 1.2, main = "Matriz de correlación")
plot(x, y, main = "Area vs GDP",
xlab = "Area", ylab = "GDP",
pch = 19, frame = FALSE)
abline(lm(y ~ x, data = europe), col = "blue")
#Relacion entre el Life expect y Pop growth
x1 <- europe$Life.expect
y6 <- europe$Pop.growth
plot(x, y1, main = "Life expect vs Pop growth",
xlab = "Area", ylab = "Inflación",
pch = 19, frame = FALSE)
abline(lm(y1 ~ x, data = europe), col = "blue")
x1 <- europe$Life.expect
y6 <- europe$Pop.growth
plot(x, y1, main = "Life expect vs Pop growth",
xlab = "Life expect", ylab = "Pop growth",
pch = 19, frame = FALSE)
abline(lm(y1 ~ x, data = europe), col = "blue")
x1 <- europe$GDP
y6 <- europe$Life.expect
plot(x, y1, main = "GDP vs Life expect",
xlab = "GDP", ylab = "lIfe expect",
pch = 19, frame = FALSE)
abline(lm(y1 ~ x, data = europe), col = "blue")
x2 <- europe$GDP
y7 <- europe$Life.expect
plot(x, y1, main = "GDP vs Life expect",
xlab = "GDP", ylab = "lIfe expect",
pch = 19, frame = FALSE)
abline(lm(y1 ~ x, data = europe), col = "blue")
x1 <- europe$Life.expect
y6 <- europe$Pop.growth
plot(x, y1, main = "Life expect vs Pop growth",
xlab = "Life expect", ylab = "Pop growth",
pch = 19, frame = FALSE)
abline(lm(y1 ~ x, data = europe), col = "blue")
x2 <- europe$GDP
x3 <- europe$GDP
y7 <- europe$Life.expect
y7 <- europe$Life.expect
x1 <- europe$Life.expect
y6 <- europe$Pop.growth
plot(x, y1, main = "Life expect vs Pop growth",
xlab = "Life expect", ylab = "Pop growth",
pch = 19, frame = FALSE)
abline(lm(y6 ~ x, data = europe), col = "blue")
x1 <- europe$Life.expect
y6 <- europe$Pop.growth
plot(x1, y6, main = "Life expect vs Pop growth",
xlab = "Life expect", ylab = "Pop growth",
pch = 19, frame = FALSE)
abline(lm(y6 ~ x1, data = europe), col = "blue")
x3 <- europe$GDP
y7 <- europe$Life.expect
plot(x3, y7, main = "GDP vs Life expect",
xlab = "GDP", ylab = "lIfe expect",
pch = 19, frame = FALSE)
abline(lm(y7 ~ x3, data = europe), col = "blue")
x4 <- europe$GDP
y8 <- europe$Pop.growth
plot(x4, y8, main = "GDP vs Pop Growth",
xlab = "GDP", ylab = "Pop Growth",
pch = 19, frame = FALSE)
abline(lm(y8 ~ x4, data = europe), col = "blue")
x5 <- europe$Life.expect
y9 <- europe$Inflation
plot(x5, y9, main = "GDP vs Pop Growth",
xlab = "GDP", ylab = "Pop Growth",
pch = 19, frame = FALSE)
abline(lm(y9 ~ x5, data = europe), col = "blue")
x5 <- europe$Life.expect
y9 <- europe$Inflation
plot(x5, y9, main = "Life expect vs Inflation",
xlab = "Life expect", ylab = "Inflation",
pch = 19, frame = FALSE)
abline(lm(y9 ~ x5, data = europe), col = "blue")
x6 <- europe$Unemployment
y10 <- europe$GDP
plot(x6, y10, main = "Unemployment vs GDP",
xlab = "Unemployment", ylab = "GDP",
pch = 19, frame = FALSE)
abline(lm(y10 ~ x6, data = europe), col = "blue")
x8 <- europe$Inflation
y11 <- europe$GDP
plot(x8, y11, main = "Inflation vs GDP",
xlab = "Inflation", ylab = "GDP",
pch = 19, frame = FALSE)
abline(lm(y11 ~ x8, data = europe), col = "blue")
round(cov(europe[,2:8]),2) #matriz cov
pca_Corr = prcomp(europe[,2:8], scale = TRUE)
summary(pca_Corr)
pca_Corr$rotation
pca_Corr$x
pca_Corr$sdev
summary(pca_Corr)
pca_Cov$x
pca_Corr = prcomp(europe[,2:8], scale = TRUE)
summary(pca_Corr)
pca_Corr$rotation
pca_Corr$x
pca_Cov = prcomp(europe[,2:8])
summary(pca_Cov)
pca_Cov$x
variab<-pca_Corr$sdev^2/sum(pca_Corr$sdev^2)
plot(variab,type= "o", col = "blue",lwd=2 )
summary(pca_Corr)
pca_Corr$sdev
pca_Cov = prcomp(europe[,2:8])
summary(pca_Cov)
pca_Cov$rotation
pca_Cov$x
pca_Cov$sdev
pca_Corr$sdev
variab<-pca_Corr$sdev^2/sum(pca_Corr$sdev^2)
plot(variab,type= "o", col = "blue",lwd=2 )
summary(pca_Corr)
pca_Corr$sdev
variab<-pca_Cov$sdev^2/sum(pca_Cov$sdev^2)
plot(variab,type= "o", col = "blue",lwd=2 )
summary(pca_Cov)
library(psych)
library(ggplot2)
biplot(pca_Corr, data = europe, label = TRUE,
loadings = TRUE, loadings.colour = 'blue',
loadings.label = TRUE, loadings.label.size = 2)
library(psych)
library(ggplot2)
biplot(pca_Corr, data = europe, label = TRUE,
loadings = TRUE, loadings.colour = 'blue',
loadings.label = TRUE, loadings.label.size = 4)
library(psych)
library(ggplot2)
biplot(pca_Corr, data = europe, label = TRUE,
loadings = TRUE, loadings.colour = 'blue',
loadings.label = TRUE, loadings.label.size = 8)
library(psych)
library(ggplot2)
biplot(pca_Corr, data = europe, label = TRUE,
loadings = TRUE, loadings.colour = 'blue',
loadings.label = TRUE, loadings.label.size = 2)
data_multiple_regression_exercice <- read.csv("~/Desktop/data_multiple_regression_exercice.csv", sep="")
View(data_multiple_regression_exercice)
data.tp3 <- data_multiple_regression_exercice
data_multiple_regression_exercice <- read.csv("~/Desktop/data_multiple_regression_exercice.csv", sep="")
View(data_multiple_regression_exercice)
#Renombrar el DataFrame
data.tp3 <- data_multiple_regression_exercice
library(ggplot2)
library(ggcorrplot)
library(funModeling)
library(olsrr)
library(pls)
library(ggplot2)
library(ggcorrplot)
library(funModeling)
install.packages("funModeling")
library(funModeling)
library(olsrr)
install.packages("olsrr")
install.packages("olsrr")
install.packages("olsrr")
install.packages("olsrr")
install.packages("olsrr")
library(olsrr)
library(pls)
data.tp3 = read.table(file="data_multiple_regression_exercice.csv")
n=nrow(data.tp3)
n
p=ncol(data.tp3)-1
p
attach(data.tp3)
n=nrow(data.tp3)
n=nrow(data.tp3)
n
p=ncol(data.tp3)-1
p
attach(data.tp3)
data.tp3 = read.table(file="data_multiple_regression_exercice.csv")
n=nrow(data.tp3)
n
p=ncol(data.tp3)-1
p
attach(data.tp3)
index_sample=get_sample(data = data.tp3, percentage_tr_rows=0.8, seed = 1234)
data.body1 = data.tp3[index_sample,]
data.body2 = data.tp3[-index_sample,]
data.tp3 <- data_multiple_regression_exercice
library(ggplot2)
library(ggcorrplot)
library(funModeling)
library(olsrr)
install.packages("olsrr")
install.packages("olsrr")
install.packages("olsrr")
library(olsrr)
library(pls)
n=nrow(data.tp3)
n
p=ncol(data.tp3)-1
p
attach(data.tp3)
index_sample=get_sample(data = data.tp3, percentage_tr_rows=0.8, seed = 1234)
data.body1 = data.tp3[index_sample,]
#Aqui se llama con los hiperparametros default
x  <- list( "learning_rate" =      0.1,
"feature_fraction" =   1.0,
"min_data_in_leaf" =  20,
"num_leaves" =        31,
"prob_corte" =       1/60 )
source("~/Desktop/mineriadedatos/labo/src/lightgbm/531_lightgbm_default.r")
